ls
help
install.packages("caret")
data(iris)
dataset <- iris
pwd
getwd
getwd()
filename <- "iris.csv"
dataset <- read.csv(filename, header=FALSE)
colnames(dataset) <- c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width","Species")
validation_index <- createDataPartition(dataset$Species,p=0.80, list=FALSE)
validation_index <- createDataPartition(dataset$Species, p=0.80, list=FALSE)
library(caret)
validation_index <- createDataPartition(dataset$Species, p=0.80, list=FALSE)
validation <- dataset[-validation_index,]
dataset <- dataset[validation_index]
dataset <- dataset[validation_index,]
dataset <- dataset[validation_index,]
validation <- dataset[-validation_index,]
library(caret)
data(iris)
dataset <- iris
filename <- "iris.csv"
dataset <- read.csv(filename, header=FALSE)
colnames(dataset) <- c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width","Species")
validation_index <- createDataPartition(dataset$Species,p= 0.80, list=FALSE)
validation <- dataset[-validation_index,]
dataset <- dataset[validation_index,]
dim(dataset)
sapply(dataset, class)
head(dataset)
levels(dataset$Species)
percentage <- prop.table(table(dataset$Species)) * 100
cbind(freq=table(dataset$Species), percentage=percentage)
summary(dataset)
summary(dataset)
x <- dataset[,1:4]
y <- dataset[,5]
par(mfrow=c(1,4))
par(mfrow=c(1,4))
for(i in 1:4){}
par(mfrow=c(1,4))
for(i in 1:4){
boxplot(x[i],main=names(iris)[i])
}
plot(y)
featurePlot(x=x,y=y, plot="ellipse")
install.packages("ellips")
install.packages("ellipse")
featurePlot(x=x,y=y, plot="ellipse")
featurePlot(x=x,y=y, plot="box")
scales <- list(x = list(relation="free"), y=list(relation="free"))
featurePlot(x=x,y=y, plot="density", scales=scales)
control <- trainControl(method="cv", number=10)
metric <- "Accuracy"
set.seed(7)
fit.lda <- train(Species~., data=dataset, method="lda", metric=metric, trControl=control)
install.packages("e1071")
fit.lda <- train(Species~., data=dataset, method="lda", metric=metric, trControl=control)
set.seed(7)
fit.cart <- train(Species~., data=dataset, method="rpart", metric=metric, trControl)
fit.cart <- train(Species~., data=dataset, method="rpart", metric=metric, trControl=control)
set.seed(7)
fin.knn <- train(Species~., data=dataset, method="knn", metric=metric, trControl=control)
set.seed(7)
fit.rf <- train(Species~., data=dataset, method="rf", metric=metric, trControl=control)
set.seed(7)
fit.knn <- train(Species~., data=dataset, method="knn", metric=metric, trControl=control)
results <- resamples(list(lda=fit.lda,cart=fit.cart,knn=fit.knn))
results <- resamples(list(lda=fit.lda,cart=fit.cart,knn=fit.knn, rf = fit.rf))
set.seed(7)
fit.svm <- train(Species~., data = dataset, method = "svmRadial", metric=metric, trControl=control)
results <- resamples(list(lda=fit.lda,cart=fit.cart,knn=fit.knn, svm = fit.svm,rf = fit.rf))
summary(results)
dotplot(results)
print(fit.lda)
predictions <- predict(fit.lda, validation)
confusionMatrix(predictions, validation$Species)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
getwd()
cd
setwd(dir = "")
setwd(dir = "C:\Users\EA\Dropbox\Projects\personal_projects\machineLearning")
setwd(dir = "C:\Users\EA\Dropbox\Projects\personal_projects\machineLearning")
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
install.packages(ISLR)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
install.packages("doSNOW")
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
View(input_data)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
View(input_data)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
View(input_data.org)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
warning()
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
warnings()
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
?confusionMatrix
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
error()
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
featurePlot(x=x,y=y, plot="ellipse")
x = input_data[,2:6]
y = input_data[,8]
featurePlot(x=x, y=y, plot="ellipse")
x = input_data[,2:6]
y = input_data[,7]
featurePlot(x=x, y=y, plot="ellipse")
install.packages(ellipse)
install.packages("ellipse")
install.packages("ellipse")
x = input_data[,2:6]
y = input_data[,7]
featurePlot(x=x, y=y, plot="ellipse")
library(caret)
library(ggplot2)
library(e1071)
library(ellipse)
setwd("~/../Dropbox/Projects/personal_projects/machineLearning")
input_file <- "new_data.csv"
input_data <- read.table(input_file, header = FALSE)
# Create a dump data log
input_data.org = input_data
# Ratio
input_data[,8] = (input_data.org[,4] + input_data.org[,5] + input_data.org[,6] + input_data.org[,7])/input_data.org[,3]
# Calc new input
input_data[,3] = input_data.org[,3] - (input_data.org[,5] + input_data.org[,7])
# reset out dump data to real data
input_data.org = input_data
# Divides by pre-rent numbers
input_data[,4] = input_data.org[,4]/input_data.org[,3]
input_data[,6] = input_data.org[,6]/input_data.org[,3]
# Sets up the column names
colnames(input_data) <- c("Name","Credit_Score", "Weekly_Income","Other","Commute","Food","Rent","Ratio")
set.seed(123123)
validation_index <- createDataPartition(input_data$Ratio, p=0.80, list=FALSE)
validation <- input_data[-validation_index,]
input_data <- input_data[validation_index,]
x = input_data[,2:6]
y = input_data[,7]
featurePlot(x=x, y=y, plot="ellipse")
featurePlot(x=x,y=y,plot="ellipse")
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
x <- input_data[,2:7]
y <- input_data[,8]
featurePlot(x=x, y=y, plot="ellipse")
x <- input_data[,2:5]
y <- input_data[,8]
featurePlot(x=x, y=y, plot="ellipse")
x <- input_data[,2:5]
y <- input_data[,8]
featurePlot(x=x, y=y, plot="ellipse")
x <- input_data[,2:4]
y <- input_data[,8]
featurePlot(x=x, y=y, plot="ellipse")
x <- input_data[,2:4]
y <- input_data[,8]
featurePlot(x=x, y=y, plot="ellipse")
x <- input_data[,2:4]
y <- input_data[,5]
featurePlot(x=x, y=y, plot="ellipse")
input_data <- read.table(input_file, header = FALSE)
# Create a dump data log
input_data.org = input_data
# Ratio
input_data[,8] = (input_data.org[,4] + input_data.org[,5] + input_data.org[,6] + input_data.org[,7])/input_data.org[,3]
# Calc new input
input_data[,3] = input_data.org[,3] - (input_data.org[,5] + input_data.org[,7])
# reset out dump data to real data
input_data.org = input_data
# Divides by pre-rent numbers
input_data[,4] = input_data.org[,4]/input_data.org[,3]
input_data[,6] = input_data.org[,6]/input_data.org[,3]
# Sets up the column names
colnames(input_data) <- c("Name","Credit_Score", "Weekly_Income","Other","Commute","Food","Rent","Ratio")
x <- input_data[,2:4]
y <- input_data[,5]
featurePlot(x=x, y=y, plot="ellipse")
x <- input_data[,2:4]
y <- input_data[,5]
featurePlot(x=x, y=y, plot="density")
dotplot(results)
library(caret)
library(ggplot2)
library(e1071)
library(ellipse)
setwd("~/../Dropbox/Projects/personal_projects/machineLearning")
input_file <- "new_data.csv"
input_data <- read.table(input_file, header = FALSE)
# Create a dump data log
input_data.org = input_data
# Ratio
input_data[,8] = (input_data.org[,4] + input_data.org[,5] + input_data.org[,6] + input_data.org[,7])/input_data.org[,3]
# Calc new input
input_data[,3] = input_data.org[,3] - (input_data.org[,5] + input_data.org[,7])
# reset out dump data to real data
input_data.org = input_data
# Divides by pre-rent numbers
input_data[,4] = input_data.org[,4]/input_data.org[,3]
input_data[,6] = input_data.org[,6]/input_data.org[,3]
# Sets up the column names
colnames(input_data) <- c("Name","Credit_Score", "Weekly_Income","Other","Commute","Food","Rent","Ratio")
set.seed(123123)
validation_index <- createDataPartition(input_data$Ratio, p=0.80, list=FALSE)
validation <- input_data[-validation_index,]
input_data <- input_data[validation_index,]
x <- input_data[,2:4]
y <- input_data[,5]
featurePlot(x=x, y=y, plot="density")
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
featurePlot(x=input_data[,2:6], y=input_data[,7], plot="density")
input_file <- "new_data.csv"
input_data <- read.table(input_file, header = FALSE)
featurePlot(x=input_data[,2:6], y=input_data[,7], plot="density")
setwd("~/../Dropbox/Projects/personal_projects/machineLearning")
input_file <- "new_data.csv"
input_data <- read.table(input_file, header = FALSE)
# Create a dump data log
input_data.org = input_data
# Ratio
input_data[,8] = (input_data.org[,4] + input_data.org[,5] + input_data.org[,6] + input_data.org[,7])/input_data.org[,3]
# Calc new input
input_data[,3] = input_data.org[,3] - (input_data.org[,5] + input_data.org[,7])
# reset out dump data to real data
input_data.org = input_data
# Divides by pre-rent numbers
input_data[,4] = input_data.org[,4]/input_data.org[,3]
input_data[,6] = input_data.org[,6]/input_data.org[,3]
# Sets up the column names
colnames(input_data) <- c("Name","Credit_Score", "Weekly_Income","Other","Commute","Food","Rent","Ratio")
featurePlot(x=input_data[,2:6], y=input_data[,7], plot="density")
featurePlot(x=input_data[,2:6], y=input_data[,7], plot="density")
library(lattice)
featurePlot(x=input_data[,2:6], y=input_data[,7], plot="density")
featurePlot(x=input_data[,2:6], y=input_data$Ratio, plot="density")
featurePlot(x=input_data[5,3:6], y=input_data$Ratio, plot="density")
featurePlot(x=input_data[5,3:6], y=input_data$Ratio, plot="density")
featurePlot(x=input_data[9,3:6], y=input_data$Ratio, plot="density")
library(caret)
library(ggplot2)
library(e1071)
library(ellipse)
library(lattice)
setwd("~/../Dropbox/Projects/personal_projects/machineLearning")
input_file <- "new_data.csv"
input_data <- read.table(input_file, header = FALSE)
# Create a dump data log
input_data.org = input_data
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7) {
boxplot(x[,i], main=names(input_data)[i])
}
library(caret)
library(ggplot2)
library(e1071)
library(ellipse)
library(lattice)
setwd("~/../Dropbox/Projects/personal_projects/machineLearning")
input_file <- "new_data.csv"
input_data <- read.table(input_file, header = FALSE)
# Create a dump data log
input_data.org = input_data
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7) {
boxplot(x[,i], main=names(input_data)[i])
}
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7) {
boxplot(x[,i], main=names(input_data)[i])
}
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7) {
boxplot(x[,i], main=names(input_data)[i])
}
x <- dataset[,2:7]
y <- dataset[,8]
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7) {
boxplot(x[,i], main=names(input_data)[i])
}
folds <- createMultiFolds(input_data$Name, k=10, times=20)
x <- input_data[,2:7]
y <- input_data[,8]
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7) {
boxplot(x[,i], main=names(input_data)[i])
}
x <- input_data[,2:7]
y <- input_data[,8]
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7)
{
boxplot(x[,i], main=names(input_data)[i])
}
y <- input_data[,7]
x <- input_data[,2:7]
y <- input_data[,7]
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7)
{
boxplot(x[,i], main=names(input_data)[i])
}
x <- input_data[,2:7]
y <- input_data[,8]
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7)
{
boxplot(x[,i], main=names(input_data)[i])
}
# Sets up the column names
colnames(input_data) <- c("Name","Credit_Score", "Weekly_Income","Other","Commute","Food","Rent","Ratio")
x <- input_data[,2:7]
y <- input_data[,8]
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7)
{
boxplot(x[,i], main=names(input_data)[i])
}
library(caret)
library(ggplot2)
library(e1071)
library(ellipse)
library(lattice)
setwd("~/../Dropbox/Projects/personal_projects/machineLearning")
input_file <- "new_data.csv"
input_data <- read.table(input_file, header = FALSE)
# Create a dump data log
input_data.org = input_data
# Ratio
input_data[,8] = (input_data.org[,4] + input_data.org[,5] + input_data.org[,6] + input_data.org[,7])/input_data.org[,3]
# Calc new input
input_data[,3] = input_data.org[,3] - (input_data.org[,5] + input_data.org[,7])
# reset out dump data to real data
input_data.org = input_data
# Divides by pre-rent numbers
input_data[,4] = input_data.org[,4]/input_data.org[,3]
input_data[,6] = input_data.org[,6]/input_data.org[,3]
# Sets up the column names
colnames(input_data) <- c("Name","Credit_Score", "Weekly_Income","Other","Commute","Food","Rent","Ratio")
x <- input_data[,2:7]
y <- input_data[,8]
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7)
{
boxplot(x[,i], main=names(input_data)[i])
}
x <- input_data[,2:7]
y <- input_data[,8]
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7)
{
boxplot(x[,i], main=names(input_data)[i])
}
# Ratio
input_data[,8] = (input_data.org[,4] + input_data.org[,5] + input_data.org[,6] + input_data.org[,7])/input_data.org[,3]
# Calc new input
input_data[,3] = input_data.org[,3] - (input_data.org[,5] + input_data.org[,7])
# reset out dump data to real data
input_data.org = input_data
# Divides by pre-rent numbers
input_data[,4] = input_data.org[,4]/input_data.org[,3]
input_data[,6] = input_data.org[,6]/input_data.org[,3]
colnames(input_data) <- c("Name","Credit_Score", "Weekly_Income","Other","Commute","Food","Rent", "Ratio")
library(caret)
library(ggplot2)
library(e1071)
library(ellipse)
library(lattice)
setwd("~/../Dropbox/Projects/personal_projects/machineLearning")
input_file <- "new_data.csv"
input_data <- read.table(input_file, header = FALSE)
# Create a dump data log
input_data.org = input_data
# Sets up the column names
colnames(input_data) <- c("Name","Credit_Score", "Weekly_Income","Other","Commute","Food","Rent")
x <- input_data[,2:7]
y <- input_data[,8]
# boxplot for each attribute on one image
par(mfrow=c(2,7))
for(i in 2:7)
{
boxplot(x[,i], main=names(input_data)[i])
}
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
source('C:/Users/EA/Dropbox/Projects/personal_projects/machineLearning/learn.r', echo=TRUE)
